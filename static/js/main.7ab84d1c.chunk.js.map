{"version":3,"sources":["assets/flors.jpg","assets/saimon-eulalia.jpg","assets/nazhseisjoanne.m4a","assets/mario.jpg","assets/mario.ogg","assets/elia.jpg","assets/elia.m4a","assets/pol.jpg","assets/pol.m4a","App.js","serviceWorker.js","index.js"],"names":["module","exports","AudioPlay","src","shouldPlay","setPlay","audioPlayer","Audio","play","pause","ClickableLetter","letter","children","action","style","color","fontSize","cursor","marginRight","onClick","Letter","index","setPhoto","useState","ASSETS","audio","photo","0","saimonAndEulaliaAudio","saimonAndEulaliaPhoto","1","marioAudio","marioPhoto","2","3","4","polAudio","polPhoto","5","eliaAudio","eliaPhoto","JOANNE","split","App","flors","className","width","height","alt","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,mTCYrCC,G,MAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC9BC,EAAc,IAAIC,MAAMJ,GAS9B,OAPIC,GACFE,EAAYE,OACZH,GAAQ,IAERC,EAAYG,QAGP,KAGHC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC3C,OACE,8BACE,4BACEC,MAAO,CACLC,MAAO,WACPC,SAAU,QACVC,OAAQ,UACRC,YAAa,QAEfC,QAASN,GAERF,GAEFC,IAKDQ,EAAS,SAAC,GAAiC,IAA/BT,EAA8B,EAA9BA,OAAQU,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACtBC,oBAAS,GADa,mBACvCf,EADuC,KACjCH,EADiC,OAErBmB,EAAOH,GAAxBI,EAFsC,EAEtCA,MAAOC,EAF+B,EAE/BA,MAOf,OACE,kBAAC,EAAD,CAAiBf,OAAQA,EAAQE,OANnB,WACdY,GAASpB,GAASG,GAClBkB,GAASJ,EAASI,KAKhB,kBAACxB,EAAD,CAAWC,IAAKsB,EAAOrB,WAAYI,EAAMH,QAASA,MAKlDmB,EAAS,CACbG,EAAG,CAAEF,MAAOG,IAAuBF,MAAOG,KAC1CC,EAAG,CAAEL,MAAOM,IAAYL,MAAOM,KAC/BC,EAAG,CAAER,MAAO,KAAMC,MAAO,MACzBQ,EAAG,CAAET,MAAO,KAAMC,MAAO,MACzBS,EAAG,CAAEV,MAAOW,IAAUV,MAAOW,KAC7BC,EAAG,CAAEb,MAAOc,IAAWb,MAAOc,MAG1BC,EAAS,SAASC,MAAM,IA8BfC,MA5Bf,WAAgB,IAAD,EACapB,mBAASqB,KADtB,mBACNlB,EADM,KACCJ,EADD,KAGb,OACE,yBAAKuB,UAAU,OACb,4BAAQA,UAAU,cAChB,wBAAI/B,MAAO,CAAEC,MAAO,eAApB,kBACA,yBACEZ,IAAKuB,EACLoB,MAAO,IACPC,OAAQ,IACRC,IAAI,0LAEN,6BACGP,EAAOQ,KAAI,SAACtC,EAAQU,GAAT,OACV,kBAAC,EAAD,CACEV,OAAQA,EACRU,MAAOA,EACP6B,IAAK7B,EACLC,SAAUA,WC9EJ6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ab84d1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flors.64ca6b61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/saimon-eulalia.506b568c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nazhseisjoanne.07c90c78.m4a\";","module.exports = __webpack_public_path__ + \"static/media/mario.e0792f91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mario.7edb06aa.ogg\";","module.exports = __webpack_public_path__ + \"static/media/elia.79e8dcbb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elia.344b3f86.m4a\";","module.exports = __webpack_public_path__ + \"static/media/pol.bc29f3cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pol.77012731.m4a\";","import React, { useState } from \"react\";\nimport flors from \"./assets/flors.jpg\";\nimport saimonAndEulaliaPhoto from \"./assets/saimon-eulalia.jpg\";\nimport saimonAndEulaliaAudio from \"./assets/nazhseisjoanne.m4a\";\nimport marioPhoto from \"./assets/mario.jpg\";\nimport marioAudio from \"./assets/mario.ogg\";\nimport eliaPhoto from \"./assets/elia.jpg\";\nimport eliaAudio from \"./assets/elia.m4a\";\nimport polPhoto from \"./assets/pol.jpg\";\nimport polAudio from \"./assets/pol.m4a\";\nimport \"./App.css\";\n\nconst AudioPlay = ({ src, shouldPlay, setPlay }) => {\n  const audioPlayer = new Audio(src);\n\n  if (shouldPlay) {\n    audioPlayer.play();\n    setPlay(false);\n  } else {\n    audioPlayer.pause();\n  }\n\n  return \"\";\n};\n\nconst ClickableLetter = ({ letter, children, action }) => {\n  return (\n    <span>\n      <strong\n        style={{\n          color: \"seagreen\",\n          fontSize: \"120px\",\n          cursor: \"pointer\",\n          marginRight: \"20px\"\n        }}\n        onClick={action}\n      >\n        {letter}\n      </strong>\n      {children}\n    </span>\n  );\n};\n\nconst Letter = ({ letter, index, setPhoto }) => {\n  const [play, setPlay] = useState(false);\n  const { audio, photo } = ASSETS[index];\n\n  const onClick = () => {\n    audio && setPlay(!play);\n    photo && setPhoto(photo);\n  };\n\n  return (\n    <ClickableLetter letter={letter} action={onClick}>\n      <AudioPlay src={audio} shouldPlay={play} setPlay={setPlay} />\n    </ClickableLetter>\n  );\n};\n\nconst ASSETS = {\n  0: { audio: saimonAndEulaliaAudio, photo: saimonAndEulaliaPhoto },\n  1: { audio: marioAudio, photo: marioPhoto },\n  2: { audio: null, photo: null },\n  3: { audio: null, photo: null },\n  4: { audio: polAudio, photo: polPhoto },\n  5: { audio: eliaAudio, photo: eliaPhoto }\n};\n\nconst JOANNE = \"JOANNE\".split(\"\");\n\nfunction App() {\n  const [photo, setPhoto] = useState(flors);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{ color: \"darksalmon\" }}>Happy Birthday</h1>\n        <img\n          src={photo}\n          width={500}\n          height={500}\n          alt=\"Να ζησεις αδερφουλλα μου. Σ'αγαπω ❤️\"\n        />\n        <div>\n          {JOANNE.map((letter, index) => (\n            <Letter\n              letter={letter}\n              index={index}\n              key={index}\n              setPhoto={setPhoto}\n            />\n          ))}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}